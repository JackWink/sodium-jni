/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.jackwink.libsodium.jni;

public class Sodium implements SodiumConstants {
  public static int sodium_init() {
    return SodiumJNI.sodium_init();
  }

  public static String sodium_version_string() {
    return SodiumJNI.sodium_version_string();
  }

  public static int crypto_sign_keypair(byte[] pk, byte[] sk) {
    return SodiumJNI.crypto_sign_keypair(pk, sk);
  }

  public static int crypto_sign_seed_keypair(byte[] pk, byte[] sk, byte[] seed) {
    return SodiumJNI.crypto_sign_seed_keypair(pk, sk, seed);
  }

  public static int crypto_sign(byte[] sm, SWIGTYPE_p_unsigned_long_long smlem, byte[] m, long mlen, byte[] sk) {
    return SodiumJNI.crypto_sign(sm, SWIGTYPE_p_unsigned_long_long.getCPtr(smlem), m, mlen, sk);
  }

  public static int crypto_sign_open(byte[] m, SWIGTYPE_p_unsigned_long_long mlen, byte[] sm, long smlen, byte[] pk) {
    return SodiumJNI.crypto_sign_open(m, SWIGTYPE_p_unsigned_long_long.getCPtr(mlen), sm, smlen, pk);
  }

  public static int crypto_sign_detached(byte[] sig, SWIGTYPE_p_unsigned_long_long slen, byte[] m, long mlen, byte[] sk) {
    return SodiumJNI.crypto_sign_detached(sig, SWIGTYPE_p_unsigned_long_long.getCPtr(slen), m, mlen, sk);
  }

  public static int crypto_sign_verify_detached(byte[] sig, byte[] m, long mlen, byte[] pk) {
    return SodiumJNI.crypto_sign_verify_detached(sig, m, mlen, pk);
  }

}
